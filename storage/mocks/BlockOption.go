// Code generated by mockery v2.21.4. DO NOT EDIT.

package mocks

import (
	pebble "github.com/onflow/flow-evm-gateway/storage/pebble"
	mock "github.com/stretchr/testify/mock"
)

// BlockOption is an autogenerated mock type for the BlockOption type
type BlockOption struct {
	mock.Mock
}

// Execute provides a mock function with given fields: block
func (_m *BlockOption) Execute(block *pebble.Blocks) error {
	ret := _m.Called(block)

	var r0 error
	if rf, ok := ret.Get(0).(func(*pebble.Blocks) error); ok {
		r0 = rf(block)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewBlockOption interface {
	mock.TestingT
	Cleanup(func())
}

// NewBlockOption creates a new instance of BlockOption. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBlockOption(t mockConstructorTestingTNewBlockOption) *BlockOption {
	mock := &BlockOption{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
